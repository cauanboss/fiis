// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model FII {
  id                Int      @id @default(autoincrement())
  ticker            String   @unique
  name              String
  price             Float
  dividendYield     Float
  pvp               Float
  lastDividend      Float
  dividendYield12m  Float
  priceVariation    Float
  source            String
  lastUpdate        DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relacionamentos
  history           FIIHistory[]
  analyses          FIIAnalysis[]
  alerts            Alert[]

  @@map("fiis")
}

model FIIHistory {
  id            Int      @id @default(autoincrement())
  ticker        String
  price         Float
  dividendYield Float
  pvp           Float
  lastDividend  Float
  source        String
  timestamp     DateTime @default(now())

  // Relacionamento
  fii           FII      @relation(fields: [ticker], references: [ticker])

  @@map("fii_history")
}

model FIIAnalysis {
  id             Int      @id @default(autoincrement())
  ticker         String
  name           String
  price          Float
  dividendYield  Float
  pvp            Float
  score          Float
  rank           Int
  recommendation String
  analysis       String
  timestamp      DateTime @default(now())

  // Relacionamento
  fii            FII      @relation(fields: [ticker], references: [ticker])

  @@map("fii_analyses")
}

model Alert {
  id        Int      @id @default(autoincrement())
  ticker    String
  type      String   // 'PRICE' | 'DY' | 'PVP'
  condition String   // 'ABOVE' | 'BELOW'
  value     Float
  active    Boolean  @default(true)
  createdAt DateTime @default(now())

  // Relacionamento
  fii       FII      @relation(fields: [ticker], references: [ticker])

  @@map("alerts")
}

model Setting {
  key       String   @id
  value     String
  updatedAt DateTime @updatedAt

  @@map("settings")
}
